[project]
name = "sunspot"
version = "0.1.0"
description = "sunspot code written in python"
requires-python = ">=3.10"
dependencies = [
    "polars",
    "python-dateutil",
    "suntime",
    "numpy",
    "matplotlib",
    "scipy",
    "scikit-learn",
    "more-itertools",
    "plotly",
    "kaleido==0.2.1",
    "uncertainty @ git+https://github.com/sophiano/uncertainty",
]

[tool.pdm]
distribution = false

[tool.pdm.dev-dependencies]
dev = ["pre-commit", "black", "isort", "ruff", "mypy", "types-python-dateutil"]
test = ["pytest", "pytest-mock", "pytest-cov", "tox", "tox-pdm"]
# docs = ["mkdocs", "mkdocs-material", "mkdocstrings[python]"]

[tool.pdm.scripts]
black = "black src test"
isort = "isort src test"
format = { composite = ["black", "isort"] }
black_check = "black --check src test"
ruff = "ruff check src test"
mypy = "mypy src test"
lint = { composite = ["black_check", "ruff", "mypy"] }
test = "pytest src test"
test-cov = "pytest --cov src --cov-report=term-missing --cov-report=html test"
test-all = "tox"

[[tool.pdm.autoexport]]
filename = "requirements.txt"
groups = ["default"]
without-hashes = true

[tool.black]
target-version = ["py310"]
line-length = 79

[tool.isort]
profile = "black"

[tool.ruff]
src = ["src"]
target-version = "py310"
line-length = 79
output-format = "grouped"
select = ["ALL"]
ignore = ["D", "FA", "T20", "INP", "PD"]
unfixable = ["I", "ERA"]

[tool.ruff.per-file-ignores]
"test/*.py" = ["S101", "FBT001", "PLR0913", "PLR2004"]

[tool.mypy]
python_version = "3.10"
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = ["if __name__ == .__main__.:"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{10,11,12},lint
skipsdist = true
skip_missing_interpreters = true

[testenv]
groups = test
commands = test

[testenv:lint]
skip_install = true
groups = dev
commands = lint
"""
