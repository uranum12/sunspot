[project]
name = "sunspot"
version = "0.1.0"
description = "sunspot code written in python"
requires-python = ">=3.10"
dependencies = [
    "polars",
    "python-dateutil",
    "suntime",
    "numpy",
    "matplotlib",
    "scipy",
    "scikit-learn",
    "more-itertools",
    "plotly",
    "kaleido==0.2.1",
    "uncertainty @ git+https://github.com/sophiano/uncertainty",
]

[tool.pdm]
distribution = false

[tool.pdm.dev-dependencies]
dev = ["pre-commit", "ruff", "mypy", "types-python-dateutil"]
test = ["pytest", "pytest-mock", "pytest-cov", "tox", "tox-pdm"]
# docs = ["mkdocs", "mkdocs-material", "mkdocstrings[python]"]

[tool.pdm.scripts]
ruff_format = "ruff format src test"
ruff_format_check = "ruff format src test --check"
ruff_check = "ruff check src test"
ruff_check_fix = "ruff check src test --fix-only --show-fixes"
mypy = "mypy src test"
format = { composite = ["ruff_check_fix", "ruff_format"] }
lint = { composite = ["ruff_format_check", "ruff_check", "mypy"] }
test = "pytest src test"
test-cov = "pytest --cov src --cov-report=term-missing --cov-report=html test"
test-all = "tox"

[[tool.pdm.autoexport]]
filename = "requirements.txt"
groups = ["default"]
without-hashes = true

[tool.ruff]
src = ["src"]
target-version = "py310"
line-length = 79
output-format = "grouped"

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "D",      # pydocstyle
    "T20",    # flake8-print
    "INP",    # flake8-no-pep420
    "PD",     # pandas-vet
]
unfixable = [
    "ERA", # eradicate
]

[tool.ruff.lint.per-file-ignores]
"test/*.py" = [
    "S101",    # assert
    "FBT001",  # boolean-type-hint-positional-argument
    "PLR0913", # too-many-arguments
    "PLR2004", # magic-value-comparison
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.mypy]
python_version = "3.10"
show_error_context = true
show_column_numbers = true
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = ["if __name__ == .__main__.:"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py3{10,11,12},lint
skipsdist = true
skip_missing_interpreters = true

[testenv]
groups = test
commands = test

[testenv:lint]
skip_install = true
groups = dev
commands = lint
"""
